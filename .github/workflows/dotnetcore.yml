name: .NET Core

on: [push]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v1

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101

    - name: Set app version
      run: powershell.exe -Command "./Set-AppVersion.ps1 -BuildDate ((Get-Date).ToString('s')) -GitRef '${{ github.ref }}'"

    - name: Test with dotnet
      run: dotnet test --configuration Release
      working-directory: tests/Tetrominoes.Tests

    - name: Compress content
      run: powershell.exe -Command ./GenerateMgcb.ps1 -Path ./Content.mgcb -Compress -Force
      working-directory: src/Tetrominoes.OpenGL/Content

    - name: Build with dotnet
      run: dotnet publish --configuration Release
      working-directory: src/Tetrominoes.OpenGL

    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: Tetrominoes.OpenGL
        path: src/Tetrominoes.OpenGL/bin/Release/netcoreapp3.1/publish

    - name: Archive asset
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        7z a OpenGL.zip ./src/Tetrominoes.OpenGL/bin/Release/netcoreapp3.1/publish/*
        7z a OpenGL.tar ./src/Tetrominoes.OpenGL/bin/Release/netcoreapp3.1/publish/*
        7z a OpenGL.tar.gz OpenGL.tar

    - name: Create nsis installer
      if: startsWith(github.ref, 'refs/tags/v')
      uses: joncloud/makensis-action@v1

    - name: Create GitHub release
      uses: actions/create-release@v1
      id: create_release
      if: startsWith(github.ref, 'refs/tags/v')
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false

    - name: Upload GitHub release asset exe installer
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./OpenGL.exe
        asset_name: OpenGL.exe
        asset_content_type: application/zip

    - name: Upload GitHub release asset zip
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./OpenGL.zip
        asset_name: OpenGL.zip
        asset_content_type: application/zip

    - name: Upload GitHub release asset gzip
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./OpenGL.tar.gz
        asset_name: OpenGL.tar.gz
        asset_content_type: application/gzip
